#!/usr/bin/env python

"""
recover-blobs

"""

from __future__ import print_function, division

import os, pdb
import pickle, shutil
import fitsio
import legacyhalos.io

sample = legacyhalos.io.read_sample()
for gal in sample:
    objid, objdir = legacyhalos.io.get_objid(gal)

    # move the big pickle files to an archive directory
    if False:
        # first copy the pickle files
        picklefile = os.path.join(objdir, '{}-runbrick-srcs.p'.format(objid))
        checkfile = os.path.join(objdir, '{}-runbrick-checkpoint.p'.format(objid))

        newpicklefile = picklefile.replace('analysis', 'analysis-archive')
        newcheckfile = checkfile.replace('analysis', 'analysis-archive')

        if os.path.isfile(picklefile):
            os.makedirs(os.path.dirname(newpicklefile), exist_ok=True)
            print('Moving {} to {}'.format(picklefile, newpicklefile))
            shutil.move(picklefile, newpicklefile)
            if os.path.isfile(picklefile):
                os.remove(picklefile)

        if os.path.isfile(checkfile):
            shutil.move(checkfile, newcheckfile)
            if os.path.isfile(checkfile):
                os.remove(checkfile)

    # read the srcs pickle file to recover the blob image
    if False:
        with open(newpicklefile, 'rb') as pp:
            rr = pickle.load(pp)
        blobfile = os.path.join(objdir, '{}-blobs.fits'.format(objid))
        blobs = rr['blobs']
        pdb.set_trace()
        # look at survey.write_output and search for .gz
        fitsio.write(blobfile, blobfile, clobber=True)

